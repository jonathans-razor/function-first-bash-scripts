#! /user/bin/bash
# aws s3 cp s3://whiteops-creds/Certs/user1/User1-cert.p13 .
# export PATH=/d/Dropbox/IT/function-first-bash-scripts:$PATH



# Global Variables
np_branch_name=view-from-behind
np_branch_name=special-view
np_jira_number=1234
np_jira_number=2345



# Git
alias cnh="   echo;echo - Git clone.                   ;echo;git clone "
alias lb="c;  echo;echo - List local branches.         ;echo;git branch;echo"
alias mede="  echo;echo - Merge develop.               ;echo;git merge develop;npm install;echo"



# Miscellany (!misc)
alias c="clear"
alias d="ls -aFl"
alias denm="  echo;echo - Delete node_modules folder.  ;echo;sudo rm -rf node_modules;echo"
alias depf="  echo;echo - Delete parameter 1 folder.   ;echo;sudo rm -rf "
alias d-old="/d/Dropbox/IT/composable-batch-files/d.bat"
alias drd="sudo rm -rf "
alias dt="    echo;echo - Detect Operating System.     ;echo;cat /etc/os-release;echo"
alias dt2="   echo;echo - Detect Operating System 2.   ;echo;hostnamectl;echo"
alias dt3="   echo;echo - Detect Operating System 3.   ;echo;lsb_release-a;echo"
alias dt4="   echo;echo - Detect Operating System 4.   ;echo;uname-r;echo"
alias e="code "
alias e-old="'C:\Users\jonat\AppData\Local\Programs\Microsoft VS Code\Code.exe'"
alias fe="/d/Dropbox/IT/composable-batch-files/fe.bat"
alias ffd="   echo;echo - Find folder.                 ;echo;find . -type d -name;echo"
alias hi="    echo;echo - Show commands history.       ;echo;history;echo"
alias hw="/d/Dropbox/IT/function-first-bash-scripts/hw.sh"
alias m="/d/Dropbox/IT/composable-batch-files/m.bat"
alias nm="/d/Dropbox/IT/function-first-bash-scripts/nm.sh"
alias nxlu="  echo;echo - Link UI.                      ;h2;npm ci;echo 'y' | npx link ../ui;echo"
alias nxldu=" echo;echo - Link D. and UI.               ;echo;h2;npm ci;echo 'y' | npx link ../d ../ui;echo"
alias pt="/d/Dropbox/IT/function-first-bash-scripts/pt.sh"
alias r="     echo;echo - Reload bashrc.               ;echo;. ~/.bashrc;echo"
alias rebo="  echo;echo - Reboot Hoss.                 ;echo;sudo reboot;echo"
alias tefo="  echo;echo - Test format.                 ;echo"
alias templa="echo;echo - .                 ;echo;;echo"
# Example of how to assign more than 1 alias to a single command.
alias {vc,vcex}="code ."



# NPM
alias nmi="   echo;echo - Install.                     ;echo;npm install;echo"
alias nmv="   echo;echo - Run validate.                ;echo;npm run validate;echo"
alias nmdd="  echo;echo - Run docs:dev.                ;echo;npm run docs:dev;echo"
alias nmdo="  echo;echo - Run docs. Runs tests too.    ;echo;npm run docs;echo"



# Open Files
alias b="     echo;echo - Open bashrc.                 ;echo;code ~/.bashrc"



# Switch Branch
alias sbd="   echo;echo - Switch to branch develop.    ;echo;git checkout develop"
function sbj() {
  echo -e '\n Switch to branch Jonathan series.\n'
  git checkout "XXX-${np_jira_number}-${np_branch_name}-$1"
  npm install
  echo ''
}



# Transform Directory
alias a="cd .."
alias fgt="cd /d/aa/repositories/for-git-testing"
alias h="cd ~;clear"
alias t="cd /c/a;clear"
alias ta="cd /c/a"
alias taa="cd /c/aa"
alias tc="cd /c"
alias tcbf="cd /d/dropbox/it/composable-batch-files"
alias td="cd /d/Dropbox/IT/dsa"
alias tf="cd /d/dropbox/it/function-first-bash-scripts"
alias tgopr="cd ~/goproj/src"
alias h="cd $HOME"



# Functions (!func)
function cbcj() {
echo -e '\n- Create branch based on current branch and global variable np_branch_name.\n'
if [ "$1" == "" ]; then
  echo -e '- *** Error: Branch version number is required.\n'
  return
fi
git checkout -b "AAA-${np_jira_number}-${np_branch_name}-$1"
git push --set-upstream origin "AAA-${np_jira_number}-${np_branch_name}
echo ''
}
function rn () {
# skw rn-bcn
echo -e '\n- Run H. if changes were made to the UI .\n'
h3
nmb
h2
nxlu
nm
echo ''
}
function rna () {
# skw rna-bcn
echo -e '\n- Build all. Link both. Then run. Oct-3-2024\n'
h1
nmb
h3
nmb
h2
nxldu
nm
echo ''
}
function rnd () {
# skw rnd-bcn
echo -e '\n- Run H. if changes were made to D.\n'
h2
cp ~/.npmrc-h-version ~/.npmrc
nvm use 20
h1
nmb
h2
nxld
nm
echo ''
}
function acp () {
echo -e '\n- Add, commit and push with template message.\n'
if [ "$1" == "" ]; then
  echo -e '- *** Error: Message is required.\n'
  return
fi
git add --all
git commit -a -m "Test: $1"
git push
}
function acpp() {
echo -e '\n- Add, commit and push with prefixed Jira message.\n'
if [ "$1" == "" ]; then
  echo -e '- *** Error: Message is required.\n'
  return
fi
git add --all
git commit -a -m "XXX-: $1."
git push
}
function g() {
# skw !g-bcn, !acppg
acpp "Generic checkin."
}
function acppm () {
echo -e '\n- Add, commit and push with merged develop message.\n'
acpp "Merged in develop branch."
}
function cs() {
  - echo Find files that contain the string {"$1"}.
  grep -R "$1" .
}
function csv() {
  - echo Find Vue files that contain the string {"$1"}.
  grep -r --inclue=*.vue "$1" .
}
function cbf() {
  echo -e '\n- Cbf.\n'
  cd /d/dropbox/it/composable-batch-files
}
function fs() {
  - echo Find files with {"$1"} in the name.
  find -iname "*$1*"  
}
function gacpm() {
  - echo Add, commit and push all changes with message.
  git add -all
  git commit -a -m "$1"
  git push
  
}
function gcb() {
  - echo Create branch based on current branch.
  git checkout -b "$1"
  git push --set-upstream origin "$1"
}
function gdebr() {
  - echo Delete branch.
  git checkout develop
  git branch -D "$1"
  git push origin --delete "$1"
}
function gmerg() {
- echo -e '\n- Git merge and favor specified branch into current branch.'
if [ "$1" == "" ]; then
  echo -e '- *** Error ***: Branch name is required.\n'
  return
fi
git merge $1
echo
}
function gsb() {
  - echo Switch branch.
  git checkout "$1"
}
function hw3() {
echo -e '\n- Hellow world.\n'
}
function vers() {
echo -e '\n- Jonathans BRC Version: May-16-2024-3-07-PM\n'
}
function s() {
echo -e '\n- Git status.\n'
if [ "$1" != "" ]; then
  $1
fi
git remote update
git status
echo
}
function sb() {
echo -e '\n- Switch branch.\n'
if [ "$1" != "" ]; then
  $1
fi
git checkout "$1"
npm install
echo
}
function fix() {
echo '\n- Fix NPM installation in the current folder.\n'
sudo rm -rf node_modules
rm package-lock.json
git pull
npm install
echo
}

PS1="\w  "


